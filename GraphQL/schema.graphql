type Query {
  blogs: [Blog]
  blog(id: ID!): Blog
  # blog(id: ID!): Blog
  # isUsersBlog(id: ID!): Boolean
  # greeting(id: ID!): String
}

type Mutation {
  createBlog(input: createBlogInput!): Blog!
  # updateBlog(input: updateBlogInput!): Blog!
  # deleteBlog(id: ID!): Blog!
  # signUpUser(input: signUpUserInput!): User!
  # addComment(input: commentInput!): Blog
}

# type User {
#   id: ID!
#   name: String!
#   email: String!
#   password: String!
# }

# input signUpUserInput {
#   name: String!
#   email: String!
#   password: String!
# }

input createBlogInput {
  author: String!
  title: String!
  content: String!
  date: String!
  category: String
}

# input updateBlogInput {
#   id: ID!
#   title: String!
#   content: String!
#   category: String!
#   image: String
# }

# input commentInput {
#   id: ID!
#   message: String!
# }

type Blog {
  id: ID!
  title: String!
  author: String!
  content: String
  date: String!
  category: String
}

# type User {
#   id: ID!
#   email: String!
#   password: String!
# }

# type Comment {
#   id: ID!
#   author: String!
#   message: String!
# }
